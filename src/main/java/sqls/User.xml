<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mul.cam.a.dao.UserDao">

<select id="idcheck" parameterType="String" resultType="String">
	SELECT ID
	FROM USER
	WHERE ID=#{id}
</select>

<select id="subjectlist" parameterType="String" resultType="mul.cam.a.dto.TestEduDto">
	select sub_name, sub_code, edu_code
	from subject
	where edu_code=#{edu_code}
</select>

<select id="eduname" parameterType="String" resultType="String">
	select edu_name
	from education
	where edu_code=#{edu_code}
</select>

<select id="subname" parameterType="String" resultType="String">
	select sub_name
	from subject
	where sub_code=#{sub_code}
</select>

<insert id="adduser" parameterType="mul.cam.a.dto.UserDto">
	insert into user(id, password, name, gender, email, birth, address, facename, newfacename, phone, phone_public, jointype, auth, breakaway, regidate)
	values(#{id}, #{password}, #{name}, #{gender}, #{email}, #{birth}, #{address}, #{facename}, '0', #{phone}, '0', 'cheesefriends', #{auth}, '0', now())
</insert>

<insert id="addusersubject" parameterType="mul.cam.a.dto.TestEduDto">
	insert into usersubject(user_id, sub_code, start_date, end_date)
	values(#{id}, #{subcode}, now(), now())
</insert> 

<select id="idmatching" parameterType="String" resultType="mul.cam.a.dto.UserDto">
	select id, name, auth
	from user
	where id=#{studentid}
</select>

<insert id="adduserparents" parameterType="mul.cam.a.dto.UserparentsDto">
	insert into userparents(studentid, parentsid)
	values(#{studentid}, #{parentsid})
</insert>

<select id="edusearch" parameterType="String" resultType="mul.cam.a.dto.EducationDto">
	select edu_code, edu_name
	from education
	where edu_name like concat('%', #{edu_name}, '%')
</select>

<insert id="adduseredu" parameterType="mul.cam.a.dto.TestEduDto">
	insert into useredu(user_id, edu_code)
	values(#{id}, #{educode})
</insert>

<select id="idsearch" parameterType="mul.cam.a.dto.UserDto" resultType="mul.cam.a.dto.UserDto">
	SELECT ID, regidate
	FROM USER
	WHERE name=#{name}
	and phone=#{phone}
</select>

<select id="idchecktwo" parameterType="mul.cam.a.dto.UserDto"  resultType="String">
	SELECT ID
	FROM USER
	WHERE ID=#{id}
	and phone=#{phone}
</select>

<update id="updatepassword" parameterType="mul.cam.a.dto.UserDto">
	update user
	set password=#{password}
	where id=#{id}
</update>

<select id="login" parameterType="mul.cam.a.dto.UserDto" resultType="mul.cam.a.dto.UserDto">
	select id, password, name, gender, email, birth, address, facename, newfacename, phone, phone_public, jointype, auth, breakaway, regidate
	from user
	where id=#{id} and password=#{password}
</select>

<update id="changeuser" parameterType="mul.cam.a.dto.UserDto">
	update user
	set password=#{password}, name=#{name}, gender=#{gender}, email=#{email}, address=#{address}, 
		facename=#{facename}, phone=#{phone}
	where id=#{id}
</update>

<!-- 마이 페이지 성적표 확인 -->
<select id="gradecheck" parameterType="String" resultType="mul.cam.a.dto.GradeDto">
	select g.student_id, e.edu_name, g.sub_name, g.student_grade
	from grade g inner join education e 
		on g.edu_code = e.edu_code 
	where student_id=#{id};
</select>

<!-- 유저가 듣고있는 과목만 필터링 -->
<select id="idsubjectlist" parameterType="String" resultType="String">
	select distinct sub_code 
	from usersubject 
	where user_id=#{id};
</select>

<!-- 석차만 뽑아오기 -->
<select id="gradeRanks" parameterType="String" resultType="Integer">
	select student_ranks
	from
	(SELECT
	  	 G.SUB_CODE, G.EDU_CODE, G.SUB_NAME, I.NAME, G.CLASS_GRADE, G.STUDENT_ID, G.STUDENT_GRADE,
	    (ROW_NUMBER() OVER (PARTITION BY SUB_CODE ORDER BY STUDENT_GRADE DESC))as student_ranks,
	    G.SUB_TOTAL
	FROM 
	GRADE G INNER JOIN SUBJECT S
		ON G.SUB_CODE = S.SUB_CODE
			INNER JOIN USER I
				ON G.STUDENT_ID = I.ID
	WHERE G.SUB_CODE=#{subCode}) as a
	where STUDENT_ID=#{id};
		<!-- <if test="choice != null and choice != '' ">
			<if test="choice == 'name'">
				ORDER BY I.NAME ASC;
			</if>
			<if test="choice == 'rank'">
				ORDER BY student_ranks ASC;
			</if>
		</if> -->
</select>


</mapper>